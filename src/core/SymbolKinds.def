// SPDX-License-Identifier: MulanPSL-2.0

/*
    符号类型

    created on 2022.12.2
*/

#ifndef SYM
    #define SYM(X)
#endif

SYM(cast_expression)
SYM(compound_statement)
SYM(type_name)
SYM(init_declarator)
SYM(postfix_expression)
SYM(direct_declarator)
SYM(unary_expression)
SYM(logical_or_expression)
SYM(struct_declaration_list)
SYM(and_expression)
SYM(iteration_statement)
SYM(additive_expression)
SYM(abstract_declarator)
SYM(direct_abstract_declarator)
SYM(assignment_operator)
SYM(multiplicative_expression)
SYM(enum_specifier)
SYM(primary_expression)
SYM(pointer)
SYM(unary_operator)
SYM(declaration_list)
SYM(identifier_list)
SYM(enumerator_list)
SYM(designator_list)
SYM(struct_or_union_specifier)
SYM(block_item)
SYM(exclusive_or_expression)
SYM(declaration_specifiers)
SYM(type_qualifier_list)
SYM(struct_declarator)
SYM(designation)
SYM(struct_or_union)
SYM(equality_expression)
SYM(initializer_list)
SYM(struct_declarator_list)
SYM(parameter_type_list)
SYM(translation_unit)
SYM(init_declarator_list)
SYM(inclusive_or_expression)
SYM(designator)
SYM(conditional_expression)
SYM(selection_statement)
SYM(constant_expression)
SYM(specifier_qualifier_list)
SYM(statement)
SYM(type_qualifier)
SYM(shift_expression)
SYM(enumerator)
SYM(labeled_statement)
SYM(block_item_list)
SYM(external_declaration)
SYM(expression)
SYM(type_specifier)
SYM(expression_statement)
SYM(argument_expression_list)
SYM(parameter_declaration)
SYM(assignment_expression)
SYM(declaration)
SYM(declarator)
SYM(initializer)
SYM(struct_declaration)
SYM(storage_class_specifier)
SYM(logical_and_expression)
SYM(relational_expression)
SYM(parameter_list)
SYM(jump_statement)
SYM(function_definition)
